---
import Layout from '../layouts/Layout.astro'
---

<Layout title="Pixel Beach">
	<main class="overflow-x-hidden">
		<figure class="illustration grid place-items-center">
			<section class="box relative grid place-items-center">
				<div class="front box-face"></div>
				<div class="right box-face"></div>
				<div class="back box-face"></div>
				<div class="left box-face"></div>
				<div class="top box-face"></div>
				
				<div class="box-sm layer-1">
					<div class="front box-face"></div>
					<div class="right box-face"></div>
					<div class="back box-face"></div>
					<div class="left box-face"></div>
					<div class="top box-face"></div>
				</div>
				<div class="box-sm layer-2">
					<div class="front box-face"></div>
					<div class="right box-face"></div>
					<div class="back box-face"></div>
					<div class="left box-face"></div>
					<div class="top box-face"></div>
				</div>
				<div class="box-sm layer-3">
					<div class="front box-face"></div>
					<div class="right box-face"></div>
					<div class="back box-face"></div>
					<div class="left box-face"></div>
					<div class="top box-face"></div>
				</div>
			</section>
		</figure>
	</main>
</Layout>

<style lang="scss" scoped>
	:root {
		--y-offset: -400;
		--z-offset: -100px;
		--origin-z-offset: calc((var(--size)/-2) + var(--z-offset));

		--size: clamp(150px, 18vw, 200px);
		--layer-1: calc(var(--size)/8);
		--layer-2: calc(var(--size)/8);
		--layer-3: calc(var(--size)/8);
	}
	main {
		padding-top: calc(var(--y-offset)*-1px);
		perspective: 1000px;
		// background: linear-gradient(to bottom,#fff, #f4f2f0 calc(var(--y-offset)*-.2px), #fff calc((var(--y-offset)*-.2px) + 10px));
	}
	.illustration {
		height: calc((var(--y-offset)*-1px) + var(--size));
		transform-style: preserve-3d;
		transform: rotateX(-30deg);
		pointer-events: none;
	}
	.box {
		transform-origin: 50% 50% var(--origin-z-offset);
		// animation: rotate 10000ms linear infinite;
		transform: rotateY(45deg) translateZ(var(--z-offset)) translateY(calc(var(--y-offset)*1px));
		transform-style: preserve-3d;
		height: var(--size);
		width: var(--size);
		pointer-events: none;
		&::after {
			content: '';
			display: block;
			height: var(--size);
			width: var(--size);
			background: #332d27;
			transform: translateZ(calc(var(--size)/-2)) translateY(calc((var(--size)/2) - (var(--y-offset)*1px) )) rotateX(90deg) scale(calc((var(--y-offset) / -500) + 1));
			opacity: calc(1 - (var(--y-offset) / -800));
			filter: blur(calc((var(--y-offset)*1px)/-10));
		}
		&-sm {
			position: absolute;
			width: var(--size);
			transform-style: preserve-3d;
			cursor: pointer;
			pointer-events: all;
			transition-duration: 800ms;
			--layer-3-cut-left: 
				0% calc(var(--slope-offset) - var(--layer-3)), 
				10% calc(var(--slope-offset) - var(--layer-3)), 
				20% calc(((var(--slope-offset) - var(--layer-3))/3)*2),
				60% calc((var(--slope-offset) - var(--layer-3))/3),
				80% 0%, 
				100% 0%;
			--layer-3-cut-right:
				100% calc(var(--slope-offset) - var(--layer-3)), 
				90% calc(var(--slope-offset) - var(--layer-3)), 
				80% calc(((var(--slope-offset) - var(--layer-3))/3)*2),
				40% calc((var(--slope-offset) - var(--layer-3))/3),
				20% 0%, 
				0% 0%;
			&.layer {
				&-1 {
					background: teal;
					top: calc(var(--size) - var(--layer-1));
					height: var(--layer-1);
				}
				&-2 {
					background: pink;
					top: calc(var(--size) - var(--layer-1) - var(--layer-2));
					height: var(--layer-2);
				}
				&-3 {
					--slope-offset: calc(var(--layer-3)*3);
					background: gold;
					top: calc(var(--size) - var(--layer-1) - var(--layer-2) - var(--layer-3));
					height: var(--layer-3);
					.back, .left, .right {
						top:  calc((var(--slope-offset) - var(--layer-3))*-1);
						height: var(--slope-offset);
					}
					.left {
						clip-path: polygon(var(--layer-3-cut-left), 100% 100%, 0% 100%);
						&::after {
							content: '';
							display: block;
							height: 100%;
							width: 100%;
							background-color: aquamarine;
							transform: scale(.95);
							clip-path: polygon(var(--layer-3-cut-left), 100% 100%, 0% 100%);
						}
					}
					.right {
						clip-path: polygon(var(--layer-3-cut-right), 0% 100%, 100% 100%);
					}
				}
			}
			&:hover {
				transform: translateX(calc(var(--size)/-1.25));
			}
		}
	}

	.box-face {
		border: 1px solid coral;
		position: absolute;
		height: 100%;
		width: 100%;
		box-shadow: inset 0 0 calc(var(--size)/10) #ced5e0;
		border-color: none;
	}
	.front {
		transform-style: preserve-3d;
	}
	.right {
		transform-origin: right;
		transform: rotateY(-90deg);
	}
	.back {
		transform: translateZ(calc(var(--size)*-1));
	}
	.left {
		transform-origin: left;
		transform: rotateY(90deg);
	}
	.top {
		height: var(--size);
		transform-origin: top;
		transform: rotateX(-90deg);
	}

	@keyframes rotate {
		from {transform: rotateY(0deg) translateZ(var(--z-offset)) translateY(calc(var(--y-offset)*1px));}
		to {transform: rotateY(360deg) translateZ(var(--z-offset)) translateY(calc(var(--y-offset)*1px));}
	}
</style>

<!-- 
	Bookmarks:
	http://academic.brooklyn.cuny.edu/geology/grocha/rocks/sedimentary.html
	https://www.shutterstock.com/image-illustration/3d-illustration-section-clean-ocean-water-339961109
	https://www.shutterstock.com/image-illustration/piece-tropical-island-water-palms-on-276434693
	https://www.shutterstock.com/image-illustration/oil-drilling-extraction-3d-isometric-illustration-1722002737
 -->
